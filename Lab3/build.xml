<?xml version="1.0"?>
<project name="lab3"
         default="build">
    <property file="build.properties"/>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="lib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <path id="classpath.source">
        <fileset dir="src/main/lib" includes="**/*.jar"/>
    </path>

    <path id="classpath.testSource">
        <fileset dir="src/test/lib" includes="**/*.jar"/>
        <pathelement location="${target.tests}"/>
    </path>

    <target name="init">
        <mkdir dir="${target.classes}"/>
        <mkdir dir="${target.tests}"/>
    </target>

    <target name="compile" depends="init">
        <javac destdir="${target.classes}"
               srcdir="${main.source}">
            <classpath refid="classpath.source"/>
        </javac>
        <echo message="Successfully compiled main sources"/>
    </target>

    <target name="build" depends="compile">
        <jar destfile="${dist.jar}" basedir="${target.classes}" compress="false" index="true">
            <manifest>
                <attribute name="Main-Class" value="io.github.web32909231800.Main"/>
            </manifest>
        </jar>
        <echo message="Successfully built"/>
    </target>

    <target name="clean">
        <trycatch>
            <try>
                <delete dir="${target}"/>
            </try>
            <catch>
                <echo message="Couldn't clean automatically, please, check existence or access to ${target}"/>
            </catch>
        </trycatch>
        <echo message="Cleaned target"/>
    </target>

    <target name="cleanDist" depends="clean">
        <trycatch>
            <try>
                <delete dir="${dist.dir}"/>
                <delete dir="${doc.dir}"/>
            </try>
            <catch>
                <echo message="Couldn't clean dist automatically, please, check existence or access to ${dist.dir} and ${doc.dir}"/>
            </catch>
        </trycatch>
        <echo message="Cleaned distribution, docs"/>
    </target>


    <target name="compileTest" depends="init">
        <javac destdir="${target.tests}"
               srcdir="${test.source}">
            <classpath refid="classpath.testSource"/>
        </javac>
        <echo message="Successfully compiled tests"/>
    </target>

    <target name="test" depends="compileTest">
        <mkdir dir="${test.result.dir}"/>
        <junitlauncher printsummary="on" haltonfailure="yes">
            <classpath refid="classpath.testSource"/>
            <testclasses outputdir="${test.result.dir}">
                <fileset dir="${target.tests}" includes="**/*.class" />
                <listener type="legacy-xml" sendSysOut="true" sendSysErr="true"/>
            </testclasses>
        </junitlauncher>
        <echo message="Test completed"/>
    </target>

    <target name="javadoc" depends="build">
        <delete dir="${doc.dir}"/>
        <mkdir dir="${doc.dir}"/>
        <javadoc destdir="${doc.dir}">
            <classpath refid="classpath.source"/>
            <classpath refid="classpath.testSource"/>
            <fileset dir="${source.dir}" includes="**/*.java"/>
        </javadoc>
    </target>

    <target name="doc" depends="javadoc">
        <jar destfile="${dist.jar}" update="true">
            <fileset dir="." includes="${doc.dir}/**"/>
        </jar>

        <signjar alias="web3"
                 storepass="webWeb"
                 keystore="${keystore}"
                 sigalg="MD5withRSA"
                 digestalg="SHA1">
            <path>
                <file file="${dist.jar}"/>
            </path>
        </signjar>
    </target>

    <target name="report">
        <trycatch>
            <try>
                <antcall target="test"/>
                <tstamp>
                    <format property="timestamp" pattern="MM dd yyyy hh:mm aa"/>
                </tstamp>
                <mkdir dir="${test.result.dir}/${timestamp}"/>
                <move todir="${test.result.dir}/${timestamp}">
                    <fileset dir="${test.result.dir}">
                        <include name="*.xml"/>
                    </fileset>
                </move>
                <exec executable="svn">
                    <arg line="add &quot;${test.result.dir}/${timestamp}&quot;"/>
                </exec>
                <exec executable="svn">
                    <arg line="commit -m &quot;Generate test report ${timestamp}&quot;"/>
                </exec>
                <exec executable="svn">
                    <arg line="update"/>
                </exec>
            </try>
            <catch>
                <echo message="Tests went wrong, report isn't generated"/>
            </catch>
        </trycatch>
    </target>
</project>